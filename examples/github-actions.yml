# Example GitHub Actions workflow for using @debugg-ai/cli
# Add this to your repository at .github/workflows/debugg-ai-tests.yml

name: DebuggAI Tests
on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for git analysis
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Start development server
        run: |
          npm run dev &
          echo $! > server.pid
        
      - name: Run DebuggAI Tests
        env:
          DEBUGGAI_API_KEY: ${{ secrets.DEBUGGAI_API_KEY }}
        run: |
          npx @debugg-ai/cli test \
            --wait-for-server \
            --server-port 3000 \
            --server-timeout 60000 \
            --max-test-time 600000 \
            --output-dir tests/debugg-ai
            
      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        if: always()  # Always upload, even if tests fail
        with:
          name: debugg-ai-test-results
          path: tests/debugg-ai/
          
      - name: Stop development server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi